@model GSS.Models.Models.PagesModel
@{
    ViewBag.Title = "Manage Pages";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<script src="~/Scripts/nicEdit.js"></script>


<script type="text/javascript">

    check_page(2);
    var area1, area2;

    function toggleArea1() {
        if (!area1) {
            area1 = new nicEditor({ fullPanel: true }).panelInstance('myArea1', { hasPanel: true });
        } else {
            area1.removeInstance('myArea1');
            area1 = null;
        }
    }

    function addArea2() {
        area2 = new nicEditor({ fullPanel: true }).panelInstance('myArea2');
    }
    function removeArea2() {
        area2.removeInstance('myArea2');
    }

    bkLib.onDomLoaded(function () { toggleArea1(); });
</script>

<div class="box">
    <div class="box-head">
        <h2>Add New Page</h2>
    </div>
    <div class="form">

        @using (Html.BeginForm("ManagePages", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "myform" }))
        {

            @Html.AntiForgeryToken()
            
            
            <p>
                <div id="sample">
                    <span class="errors">@ViewBag.error</span>
                    <label>Page Content <span>(Required Field)</span></label>
                    @Html.TextAreaFor(d => d.PageCotent, new { @class = "field size1", @style = "width: 720px; height: 150px;", @id = "myArea1" })
                    @Html.ValidationMessageFor(model => model.PageCotent, "", new { @class = "errors" })
                </div>
            </p>
            <p>
                <label>Tittle<span>(Required Field)</span></label>
                @Html.TextBoxFor(d => d.Tittle, new { @class = "field size1" })
                @Html.ValidationMessageFor(model => model.Tittle, "", new { @class = "errors" })
            </p>
            <p>
                <label>Description<span>(Required Field)</span></label>
                @Html.TextAreaFor(d => d.Description, new { @class = "field size1", @cols = 30, @rows = 10 })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "errors" })
            </p>

            <p>
                <label>MetaKeywords<span></span></label>
                @Html.TextBoxFor(d => d.MetaKeywords, new { @class = "field size1" })
                @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "errors" })
            </p>

            <p>
                <input type="submit" value="Submit" class="button" />
            </p>

        }

    </div>
</div>

